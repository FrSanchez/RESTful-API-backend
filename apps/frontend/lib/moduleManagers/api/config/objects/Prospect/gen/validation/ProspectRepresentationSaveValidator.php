<?php
namespace Api\Config\Objects\Prospect\Gen\Validation;

use Api\Exceptions\ApiException;
use Api\Gen\Representations\ProspectRepresentation;
use Api\Representations\Representation;
use Api\Validation\RepresentationSaveValidator;
use ApiErrorLibrary;
use RuntimeException;
use RESTClient;

/**
 * DO NOT MODIFY! This is generated by the API generation suite. Use "baker-api-gen" to generate a new version.

 */
class ProspectRepresentationSaveValidator implements RepresentationSaveValidator
{
	public function validateCreate(Representation $representation): void
	{
		if (!($representation instanceof ProspectRepresentation)) {
			throw new RuntimeException(
				"Unexpected representation specified.\nExpected: " .
				ProspectRepresentation::class .
				"\nActual: " . get_class($representation)
			);
		}

		$this->validateReadOnlyFields($representation);
		$this->validateRequiredFields($representation);
		$this->validateNonNullableFields($representation);
	}

	public function validatePatchUpdate(Representation $representation): void
	{
		if (!($representation instanceof ProspectRepresentation)) {
			throw new RuntimeException(
				"Unexpected representation specified.\nExpected: " .
				ProspectRepresentation::class .
				"\nActual: " . get_class($representation)
			);
		}

		$this->validateReadOnlyFields($representation);
		$this->validateNonNullableFields($representation);
	}

	/**
	 * @param ProspectRepresentation $representation
	 */
	private function validateReadOnlyFields(ProspectRepresentation $representation): void
	{
		$invalidFields = [];

		if ($representation->getIsAssignedToSet()) {
			$invalidFields[] = 'assignedTo';
		}

		if ($representation->getIsAssignedToIdSet()) {
			$invalidFields[] = 'assignedToId';
		}

		if ($representation->getIsCampaignSet()) {
			$invalidFields[] = 'campaign';
		}

		if ($representation->getIsCampaignParameterSet()) {
			$invalidFields[] = 'campaignParameter';
		}

		if ($representation->getIsContentParameterSet()) {
			$invalidFields[] = 'contentParameter';
		}

		if ($representation->getIsConvertedAtSet()) {
			$invalidFields[] = 'convertedAt';
		}

		if ($representation->getIsConvertedFromObjectNameSet()) {
			$invalidFields[] = 'convertedFromObjectName';
		}

		if ($representation->getIsConvertedFromObjectTypeSet()) {
			$invalidFields[] = 'convertedFromObjectType';
		}

		if ($representation->getIsCreatedAtSet()) {
			$invalidFields[] = 'createdAt';
		}

		if ($representation->getIsCreatedBySet()) {
			$invalidFields[] = 'createdBy';
		}

		if ($representation->getIsCreatedByIdSet()) {
			$invalidFields[] = 'createdById';
		}

		if ($representation->getIsDoNotSellSet()) {
			$invalidFields[] = 'doNotSell';
		}

		if ($representation->getIsEmailBouncedAtSet()) {
			$invalidFields[] = 'emailBouncedAt';
		}

		if ($representation->getIsEmailBouncedReasonSet()) {
			$invalidFields[] = 'emailBouncedReason';
		}

		if ($representation->getIsFirstActivityAtSet()) {
			$invalidFields[] = 'firstActivityAt';
		}

		if ($representation->getIsFirstAssignedAtSet()) {
			$invalidFields[] = 'firstAssignedAt';
		}

		if ($representation->getIsFirstReferrerQuerySet()) {
			$invalidFields[] = 'firstReferrerQuery';
		}

		if ($representation->getIsFirstReferrerTypeSet()) {
			$invalidFields[] = 'firstReferrerType';
		}

		if ($representation->getIsFirstReferrerUrlSet()) {
			$invalidFields[] = 'firstReferrerUrl';
		}

		if ($representation->getIsGradeSet()) {
			$invalidFields[] = 'grade';
		}

		if ($representation->getIsIdSet()) {
			$invalidFields[] = 'id';
		}

		if ($representation->getIsIsDeletedSet()) {
			$invalidFields[] = 'isDeleted';
		}

		if ($representation->getIsIsEmailHardBouncedSet()) {
			$invalidFields[] = 'isEmailHardBounced';
		}

		if ($representation->getIsLastActivityAtSet()) {
			$invalidFields[] = 'lastActivityAt';
		}

		if ($representation->getIsLifecycleStageIdSet()) {
			$invalidFields[] = 'lifecycleStageId';
		}

		if ($representation->getIsMediumParameterSet()) {
			$invalidFields[] = 'mediumParameter';
		}

		if ($representation->getIsPasswordSet()) {
			$invalidFields[] = 'password';
		}

		if ($representation->getIsProspectAccountSet()) {
			$invalidFields[] = 'prospectAccount';
		}

		if ($representation->getIsRecentInteractionSet()) {
			$invalidFields[] = 'recentInteraction';
		}

		if ($representation->getIsSalesforceAccountIdSet()) {
			$invalidFields[] = 'salesforceAccountId';
		}

		if ($representation->getIsSalesforceCampaignIdSet()) {
			$invalidFields[] = 'salesforceCampaignId';
		}

		if ($representation->getIsSalesforceContactIdSet()) {
			$invalidFields[] = 'salesforceContactId';
		}

		if ($representation->getIsSalesforceLastSyncSet()) {
			$invalidFields[] = 'salesforceLastSync';
		}

		if ($representation->getIsSalesforceLeadIdSet()) {
			$invalidFields[] = 'salesforceLeadId';
		}

		if ($representation->getIsSalesforceUrlSet()) {
			$invalidFields[] = 'salesforceUrl';
		}

		if ($representation->getIsSourceParameterSet()) {
			$invalidFields[] = 'sourceParameter';
		}

		if ($representation->getIsTermParameterSet()) {
			$invalidFields[] = 'termParameter';
		}

		if ($representation->getIsUpdatedAtSet()) {
			$invalidFields[] = 'updatedAt';
		}

		if ($representation->getIsUpdatedBySet()) {
			$invalidFields[] = 'updatedBy';
		}

		if ($representation->getIsUpdatedByIdSet()) {
			$invalidFields[] = 'updatedById';
		}

		if (!empty($invalidFields)) {
			throw new ApiException(
				ApiErrorLibrary::API_ERROR_INVALID_PROPERTY,
				implode(', ', $invalidFields) . ". These fields are read only.",
				RESTClient::HTTP_BAD_REQUEST
			);
		}
	}

	/**
	 * @param ProspectRepresentation $representation
	 */
	private function validateRequiredFields(ProspectRepresentation $representation): void
	{
		$invalidFields = [];

		if (!$representation->getIsEmailSet()) {
			$invalidFields[] = 'email';
		}


		if (!empty($invalidFields)) {
			throw new ApiException(
				ApiErrorLibrary::API_ERROR_MISSING_PROPERTY,
				implode(', ', $invalidFields),
				RESTClient::HTTP_BAD_REQUEST
			);
		}
	}

	private function validateNonNullableFields(ProspectRepresentation $representation): void
	{
		$invalidFields = [];

		if ($representation->getIsAddressOneSet() && is_null($representation->getAddressOne())) {
			$invalidFields[] = 'addressOne';
		}

		if ($representation->getIsAddressTwoSet() && is_null($representation->getAddressTwo())) {
			$invalidFields[] = 'addressTwo';
		}

		if ($representation->getIsAnnualRevenueSet() && is_null($representation->getAnnualRevenue())) {
			$invalidFields[] = 'annualRevenue';
		}

		if ($representation->getIsAssignedToIdSet() && is_null($representation->getAssignedToId())) {
			$invalidFields[] = 'assignedToId';
		}

		if ($representation->getIsCampaignIdSet() && is_null($representation->getCampaignId())) {
			$invalidFields[] = 'campaignId';
		}

		if ($representation->getIsCampaignParameterSet() && is_null($representation->getCampaignParameter())) {
			$invalidFields[] = 'campaignParameter';
		}

		if ($representation->getIsCitySet() && is_null($representation->getCity())) {
			$invalidFields[] = 'city';
		}

		if ($representation->getIsCommentsSet() && is_null($representation->getComments())) {
			$invalidFields[] = 'comments';
		}

		if ($representation->getIsCompanySet() && is_null($representation->getCompany())) {
			$invalidFields[] = 'company';
		}

		if ($representation->getIsContentParameterSet() && is_null($representation->getContentParameter())) {
			$invalidFields[] = 'contentParameter';
		}

		if ($representation->getIsConvertedAtSet() && is_null($representation->getConvertedAt())) {
			$invalidFields[] = 'convertedAt';
		}

		if ($representation->getIsConvertedFromObjectNameSet() && is_null($representation->getConvertedFromObjectName())) {
			$invalidFields[] = 'convertedFromObjectName';
		}

		if ($representation->getIsConvertedFromObjectTypeSet() && is_null($representation->getConvertedFromObjectType())) {
			$invalidFields[] = 'convertedFromObjectType';
		}

		if ($representation->getIsCountrySet() && is_null($representation->getCountry())) {
			$invalidFields[] = 'country';
		}

		if ($representation->getIsCreatedAtSet() && is_null($representation->getCreatedAt())) {
			$invalidFields[] = 'createdAt';
		}

		if ($representation->getIsCreatedByIdSet() && is_null($representation->getCreatedById())) {
			$invalidFields[] = 'createdById';
		}

		if ($representation->getIsDepartmentSet() && is_null($representation->getDepartment())) {
			$invalidFields[] = 'department';
		}

		if ($representation->getIsDoNotSellSet() && is_null($representation->getDoNotSell())) {
			$invalidFields[] = 'doNotSell';
		}

		if ($representation->getIsEmailSet() && is_null($representation->getEmail())) {
			$invalidFields[] = 'email';
		}

		if ($representation->getIsEmailBouncedAtSet() && is_null($representation->getEmailBouncedAt())) {
			$invalidFields[] = 'emailBouncedAt';
		}

		if ($representation->getIsEmailBouncedReasonSet() && is_null($representation->getEmailBouncedReason())) {
			$invalidFields[] = 'emailBouncedReason';
		}

		if ($representation->getIsEmployeesSet() && is_null($representation->getEmployees())) {
			$invalidFields[] = 'employees';
		}

		if ($representation->getIsFaxSet() && is_null($representation->getFax())) {
			$invalidFields[] = 'fax';
		}

		if ($representation->getIsFirstActivityAtSet() && is_null($representation->getFirstActivityAt())) {
			$invalidFields[] = 'firstActivityAt';
		}

		if ($representation->getIsFirstAssignedAtSet() && is_null($representation->getFirstAssignedAt())) {
			$invalidFields[] = 'firstAssignedAt';
		}

		if ($representation->getIsFirstNameSet() && is_null($representation->getFirstName())) {
			$invalidFields[] = 'firstName';
		}

		if ($representation->getIsFirstReferrerQuerySet() && is_null($representation->getFirstReferrerQuery())) {
			$invalidFields[] = 'firstReferrerQuery';
		}

		if ($representation->getIsFirstReferrerTypeSet() && is_null($representation->getFirstReferrerType())) {
			$invalidFields[] = 'firstReferrerType';
		}

		if ($representation->getIsFirstReferrerUrlSet() && is_null($representation->getFirstReferrerUrl())) {
			$invalidFields[] = 'firstReferrerUrl';
		}

		if ($representation->getIsGradeSet() && is_null($representation->getGrade())) {
			$invalidFields[] = 'grade';
		}

		if ($representation->getIsIdSet() && is_null($representation->getId())) {
			$invalidFields[] = 'id';
		}

		if ($representation->getIsIndustrySet() && is_null($representation->getIndustry())) {
			$invalidFields[] = 'industry';
		}

		if ($representation->getIsIsDeletedSet() && is_null($representation->getIsDeleted())) {
			$invalidFields[] = 'isDeleted';
		}

		if ($representation->getIsIsDoNotCallSet() && is_null($representation->getIsDoNotCall())) {
			$invalidFields[] = 'isDoNotCall';
		}

		if ($representation->getIsIsDoNotEmailSet() && is_null($representation->getIsDoNotEmail())) {
			$invalidFields[] = 'isDoNotEmail';
		}

		if ($representation->getIsIsEmailHardBouncedSet() && is_null($representation->getIsEmailHardBounced())) {
			$invalidFields[] = 'isEmailHardBounced';
		}

		if ($representation->getIsIsReviewedSet() && is_null($representation->getIsReviewed())) {
			$invalidFields[] = 'isReviewed';
		}

		if ($representation->getIsIsStarredSet() && is_null($representation->getIsStarred())) {
			$invalidFields[] = 'isStarred';
		}

		if ($representation->getIsJobTitleSet() && is_null($representation->getJobTitle())) {
			$invalidFields[] = 'jobTitle';
		}

		if ($representation->getIsLastActivityAtSet() && is_null($representation->getLastActivityAt())) {
			$invalidFields[] = 'lastActivityAt';
		}

		if ($representation->getIsLastNameSet() && is_null($representation->getLastName())) {
			$invalidFields[] = 'lastName';
		}

		if ($representation->getIsLifecycleStageIdSet() && is_null($representation->getLifecycleStageId())) {
			$invalidFields[] = 'lifecycleStageId';
		}

		if ($representation->getIsMediumParameterSet() && is_null($representation->getMediumParameter())) {
			$invalidFields[] = 'mediumParameter';
		}

		if ($representation->getIsNotesSet() && is_null($representation->getNotes())) {
			$invalidFields[] = 'notes';
		}

		if ($representation->getIsOptedOutSet() && is_null($representation->getOptedOut())) {
			$invalidFields[] = 'optedOut';
		}

		if ($representation->getIsPasswordSet() && is_null($representation->getPassword())) {
			$invalidFields[] = 'password';
		}

		if ($representation->getIsPhoneSet() && is_null($representation->getPhone())) {
			$invalidFields[] = 'phone';
		}

		if ($representation->getIsProfileIdSet() && is_null($representation->getProfileId())) {
			$invalidFields[] = 'profileId';
		}

		if ($representation->getIsProspectAccountIdSet() && is_null($representation->getProspectAccountId())) {
			$invalidFields[] = 'prospectAccountId';
		}

		if ($representation->getIsRecentInteractionSet() && is_null($representation->getRecentInteraction())) {
			$invalidFields[] = 'recentInteraction';
		}

		if ($representation->getIsSalesforceAccountIdSet() && is_null($representation->getSalesforceAccountId())) {
			$invalidFields[] = 'salesforceAccountId';
		}

		if ($representation->getIsSalesforceCampaignIdSet() && is_null($representation->getSalesforceCampaignId())) {
			$invalidFields[] = 'salesforceCampaignId';
		}

		if ($representation->getIsSalesforceContactIdSet() && is_null($representation->getSalesforceContactId())) {
			$invalidFields[] = 'salesforceContactId';
		}

		if ($representation->getIsSalesforceIdSet() && is_null($representation->getSalesforceId())) {
			$invalidFields[] = 'salesforceId';
		}

		if ($representation->getIsSalesforceLastSyncSet() && is_null($representation->getSalesforceLastSync())) {
			$invalidFields[] = 'salesforceLastSync';
		}

		if ($representation->getIsSalesforceLeadIdSet() && is_null($representation->getSalesforceLeadId())) {
			$invalidFields[] = 'salesforceLeadId';
		}

		if ($representation->getIsSalesforceOwnerIdSet() && is_null($representation->getSalesforceOwnerId())) {
			$invalidFields[] = 'salesforceOwnerId';
		}

		if ($representation->getIsSalesforceUrlSet() && is_null($representation->getSalesforceUrl())) {
			$invalidFields[] = 'salesforceUrl';
		}

		if ($representation->getIsSalutationSet() && is_null($representation->getSalutation())) {
			$invalidFields[] = 'salutation';
		}

		if ($representation->getIsScoreSet() && is_null($representation->getScore())) {
			$invalidFields[] = 'score';
		}

		if ($representation->getIsSourceSet() && is_null($representation->getSource())) {
			$invalidFields[] = 'source';
		}

		if ($representation->getIsSourceParameterSet() && is_null($representation->getSourceParameter())) {
			$invalidFields[] = 'sourceParameter';
		}

		if ($representation->getIsStateSet() && is_null($representation->getState())) {
			$invalidFields[] = 'state';
		}

		if ($representation->getIsTermParameterSet() && is_null($representation->getTermParameter())) {
			$invalidFields[] = 'termParameter';
		}

		if ($representation->getIsTerritorySet() && is_null($representation->getTerritory())) {
			$invalidFields[] = 'territory';
		}

		if ($representation->getIsUpdatedAtSet() && is_null($representation->getUpdatedAt())) {
			$invalidFields[] = 'updatedAt';
		}

		if ($representation->getIsUpdatedByIdSet() && is_null($representation->getUpdatedById())) {
			$invalidFields[] = 'updatedById';
		}

		if ($representation->getIsWebsiteSet() && is_null($representation->getWebsite())) {
			$invalidFields[] = 'website';
		}

		if ($representation->getIsYearsInBusinessSet() && is_null($representation->getYearsInBusiness())) {
			$invalidFields[] = 'yearsInBusiness';
		}

		if ($representation->getIsZipSet() && is_null($representation->getZip())) {
			$invalidFields[] = 'zip';
		}


		if (!empty($invalidFields)) {
			throw new ApiException(
				ApiErrorLibrary::API_ERROR_INVALID_PROPERTY,
				implode(', ', $invalidFields) . ". These fields should not be null.",
				RESTClient::HTTP_BAD_REQUEST
			);
		}
	}
}
