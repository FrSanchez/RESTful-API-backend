<?php
namespace Api\Config\Objects\Salesforce\Gen\ObjectActions;

use Api\Exceptions\ApiException;
use Api\Framework\FileInput;
use Api\Gen\Representations\SalesforceRepresentation;
use Api\Objects\ObjectActions\ObjectAction;
use Api\Objects\ObjectActions\ObjectActionContext;
use Api\Representations\Representation;
use ApiErrorLibrary;
use Exception;
use RESTClient;
use RuntimeException;

/**
 * DO NOT MODIFY! This is generated by the API generation suite. Use "baker-api-gen" to generate a new version.

 */
abstract class AbstractSalesforceResumeAction implements ObjectAction
{
	/**
	 * Override this method with any validation logic. This method is executed before the {@see executeActionWithArgs}
	 * method.
	 *
	 * @param ObjectActionContext $objectActionContext The current context in which the object action is being executed.
	 * @throws Exception
	 */
	public function validateWithArgs(
		ObjectActionContext $objectActionContext
	): void
	{
		// override this method to validate the arguments
	}

	/**
	 * Override this method with the logic to execute when the object action is invoked.
	 *
	 * @param ObjectActionContext $objectActionContext The current context in which the object action is being executed.
	 * @return SalesforceRepresentation|null
	 */
	public abstract function executeActionWithArgs(
		ObjectActionContext $objectActionContext
	): ?SalesforceRepresentation;

	final public function executeObjectAction(
		ObjectActionContext $objectActionContext,
		Representation $bodyRepresentation,
		?FileInput $fileInput
	): ?Representation {
		if (!$bodyRepresentation instanceof \Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation) {
			throw new RuntimeException("Unexpected type for body representation. Expected \Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation.");
		}

		$this->validateRequiredProperties($bodyRepresentation);
		$this->validateNonNullableProperties($bodyRepresentation);

		$this->validateWithArgs(
			$objectActionContext
		);
		return $this->executeActionWithArgs(
			$objectActionContext
		);
	}

	/**
	 * @param \Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation $representation
	 */
	private function validateRequiredProperties(\Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation $representation): void
	{
		$invalidProperties = [];


		if (!empty($invalidProperties)) {
			throw new ApiException(
				ApiErrorLibrary::API_ERROR_MISSING_PROPERTY,
				implode(', ', $invalidProperties),
				RESTClient::HTTP_BAD_REQUEST
			);
		}
	}

	/**
	 * @param \Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation $representation
	 */
	private function validateNonNullableProperties(\Api\Gen\Representations\SalesforceResumeObjectActionInputRepresentation $representation): void
	{
		$invalidProperties = [];


		if (!empty($invalidProperties)) {
			throw new ApiException(
				ApiErrorLibrary::API_ERROR_INVALID_PROPERTY,
				implode(', ', $invalidProperties) . ". These properties should not be null.",
				RESTClient::HTTP_BAD_REQUEST
			);
		}
	}
}
