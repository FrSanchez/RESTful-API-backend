<?php
namespace Api\Config\Objects\BulkAction\Gen\Doctrine;

use Api\Objects\FieldDefinition;
use Api\Objects\Doctrine\QueryBuilderNode;
use RuntimeException;

/**
 * DO NOT MODIFY! This is generated by the API generation suite. Use "baker-api-gen" to generate a new version.

 */
abstract class AbstractBulkActionDoctrineQueryModifier extends \Api\Objects\Doctrine\DoctrineQueryModifier
{
	/**
	 * Override this method to add any additional fields or join for the derived fields selected by the user. Usually
	 * getValueForDerivedField will also need to be overridden to handle calculating the derived field's value.
	 *
	 * @param QueryBuilderNode $queryBuilderNode
	 * @param FieldDefinition[] $derivedFieldDefinitions
	 */
	public function modifyQueryBuilderWithDerivedFields(QueryBuilderNode $queryBuilderNode, array $derivedFieldDefinitions): void
	{
		foreach ($derivedFieldDefinitions as $fieldDef) {
			switch ($fieldDef->getName()) {
				case 'errorsRef':
				case 'errors_ref':
					$this->modifyQueryWithErrorsRefField($queryBuilderNode, $fieldDef);
					break;
				case 'fileName':
				case 'file_name':
					$this->modifyQueryWithFileNameField($queryBuilderNode, $fieldDef);
					break;
				case 'percentComplete':
				case 'percent_complete':
					$this->modifyQueryWithPercentCompleteField($queryBuilderNode, $fieldDef);
					break;
				case 'processedCount':
				case 'processed_count':
					$this->modifyQueryWithProcessedCountField($queryBuilderNode, $fieldDef);
					break;
				case 'sendSystemEmail':
				case 'send_system_email':
					$this->modifyQueryWithSendSystemEmailField($queryBuilderNode, $fieldDef);
					break;
				default:
					throw new RuntimeException("Unhandled derived field: {$fieldDef->getName()}.");
			}
		}
			}

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 */
	protected function getValueForDerivedField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef)
	{
		switch ($fieldDef->getName()) {
			case 'errorsRef':
			case 'errors_ref':
				return $this->getValueForErrorsRefField($doctrineRecord, $fieldDef);
			case 'fileName':
			case 'file_name':
				return $this->getValueForFileNameField($doctrineRecord, $fieldDef);
			case 'percentComplete':
			case 'percent_complete':
				return $this->getValueForPercentCompleteField($doctrineRecord, $fieldDef);
			case 'processedCount':
			case 'processed_count':
				return $this->getValueForProcessedCountField($doctrineRecord, $fieldDef);
			case 'sendSystemEmail':
			case 'send_system_email':
				return $this->getValueForSendSystemEmailField($doctrineRecord, $fieldDef);
			default:
				return parent::getValueForDerivedField($doctrineRecord, $fieldDef);
		}
			}

	/**
	 * Override this method to add any additional fields or joins to calculate the errorsRef field. You should also override
	 * the getValueForErrorsRefField function to handle calculating the errorsRef value.
	 *
	 * @param QueryBuilderNode $queryBuilderRoot
	 * @param FieldDefinition $fieldDef
	 * @see getValueForErrorsRefField
	 */
	protected abstract function modifyQueryWithErrorsRefField(QueryBuilderNode $queryBuilderRoot, FieldDefinition $fieldDef);

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 * @see modifyQueryWithErrorsRefField
	 */
	protected abstract function getValueForErrorsRefField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef);

	/**
	 * Override this method to add any additional fields or joins to calculate the fileName field. You should also override
	 * the getValueForFileNameField function to handle calculating the fileName value.
	 *
	 * @param QueryBuilderNode $queryBuilderRoot
	 * @param FieldDefinition $fieldDef
	 * @see getValueForFileNameField
	 */
	protected abstract function modifyQueryWithFileNameField(QueryBuilderNode $queryBuilderRoot, FieldDefinition $fieldDef);

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 * @see modifyQueryWithFileNameField
	 */
	protected abstract function getValueForFileNameField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef);

	/**
	 * Override this method to add any additional fields or joins to calculate the percentComplete field. You should also override
	 * the getValueForPercentCompleteField function to handle calculating the percentComplete value.
	 *
	 * @param QueryBuilderNode $queryBuilderRoot
	 * @param FieldDefinition $fieldDef
	 * @see getValueForPercentCompleteField
	 */
	protected abstract function modifyQueryWithPercentCompleteField(QueryBuilderNode $queryBuilderRoot, FieldDefinition $fieldDef);

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 * @see modifyQueryWithPercentCompleteField
	 */
	protected abstract function getValueForPercentCompleteField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef);

	/**
	 * Override this method to add any additional fields or joins to calculate the processedCount field. You should also override
	 * the getValueForProcessedCountField function to handle calculating the processedCount value.
	 *
	 * @param QueryBuilderNode $queryBuilderRoot
	 * @param FieldDefinition $fieldDef
	 * @see getValueForProcessedCountField
	 */
	protected abstract function modifyQueryWithProcessedCountField(QueryBuilderNode $queryBuilderRoot, FieldDefinition $fieldDef);

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 * @see modifyQueryWithProcessedCountField
	 */
	protected abstract function getValueForProcessedCountField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef);

	/**
	 * Override this method to add any additional fields or joins to calculate the sendSystemEmail field. You should also override
	 * the getValueForSendSystemEmailField function to handle calculating the sendSystemEmail value.
	 *
	 * @param QueryBuilderNode $queryBuilderRoot
	 * @param FieldDefinition $fieldDef
	 * @see getValueForSendSystemEmailField
	 */
	protected abstract function modifyQueryWithSendSystemEmailField(QueryBuilderNode $queryBuilderRoot, FieldDefinition $fieldDef);

	/**
	 * @param \Doctrine_Record $doctrineRecord
	 * @param FieldDefinition $fieldDef
	 * @return mixed
	 * @see modifyQueryWithSendSystemEmailField
	 */
	protected abstract function getValueForSendSystemEmailField(\Doctrine_Record $doctrineRecord, FieldDefinition $fieldDef);

}
